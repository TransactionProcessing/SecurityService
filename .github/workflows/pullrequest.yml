name: Build and Test Pull Requests

on:
  pull_request:
    branches:
    - master

jobs:
  build:
    name: "Build and Unit Test Pull Requests"
    env:
        ASPNETCORE_ENVIRONMENT: "Production"

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2.3.4

    - name: Print Env Var
      run: |
        echo "${{ env.GITHUB_WORKSPACE }}"

    - name: Trust Certificate
      run: |
        $pfx = new-object System.Security.Cryptography.X509Certificates.X509Certificate2 
        $certPath = read-host "${{ env.GITHUB_WORKSPACE }}\Certificates\aspnetapp-root-cert.pfx"
        $pfxPass = read-host "password" -assecurestring
        $pfx.import($certPath,$pfxPass,"Exportable,PersistKeySet") 
        $store = new-object System.Security.Cryptography.X509Certificates.X509Store([System.Security.Cryptography.X509Certificates.StoreName]::Root,"localmachine")
        $store.open("MaxAllowed") 
        $store.add($pfx) 
        $store.close()

    - name: Restore Nuget Packages
      run: dotnet restore SecurityService.sln --source https://api.nuget.org/v3/index.json --source https://www.myget.org/F/transactionprocessing/api/v3/index.json

    - name: Build Code
      run: dotnet build SecurityService.sln --configuration Release

    - name: Run Unit Tests
      run: |
        echo "ASPNETCORE_ENVIRONMENT are > ${ASPNETCORE_ENVIRONMENT}"
        dotnet test "SecurityService.UnitTests\SecurityService.UnitTests.csproj"
    
    - name: Build Docker Images
      run: |
        docker build . --file SecurityService/DockerfileWindows --tag securityservice:latest
        docker build . --file SecurityServiceTestUI/DockerfileWindows --tag securityservicetestwebclient:latest

    - name: Run Integration Tests (Non UI)
      run: |
        dotnet test "SecurityService.IntegrationTests\SecurityService.IntegrationTests.csproj" --filter Category=PRTest

    - name: Run Integration Tests (UI Firefox)
      env:
        Browser: Firefox
      run: |
        dotnet test "SecurityService.OpenIdConnect.IntegrationTests\SecurityService.OpenIdConnect.IntegrationTests.csproj" --filter Category=PRTest
    
    - name: Run Integration Tests (UI Chrome)
      env:
        Browser: Chrome
      run: |  
        dotnet test "SecurityService.OpenIdConnect.IntegrationTests\SecurityService.OpenIdConnect.IntegrationTests.csproj" --filter Category=PRTest

    - name: Run Integration Tests (UI Edge)
      env:
        Browser: Edge
        DriverPath: C:\\SeleniumWebDrivers\\EdgeDriver\\
        DriverExe: msedgedriver.exe
      run: |
        dotnet test "SecurityService.OpenIdConnect.IntegrationTests\SecurityService.OpenIdConnect.IntegrationTests.csproj" --filter Category=PRTest
