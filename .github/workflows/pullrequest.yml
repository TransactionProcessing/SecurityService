name: Build and Test Pull Requests

on:
  pull_request:
    branches:
    - master

jobs:
  buildnonui:
    name: "Build and Unit Test Pull Requests - Non UI"
    env:
        ASPNETCORE_ENVIRONMENT: "Production"

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.3.4

    - name: Trust Root Certificate
      run: |
        certPath="$GITHUB_WORKSPACE/Certificates/aspnetapp-root-cert.pfx"
        password="password"

        openssl pkcs12 -in "$certPath" -out temp.pem -nodes -password "pass:$password"
        sudo cp temp.pem /usr/local/share/ca-certificates/aspnetapp-root-cert.crt
        sudo update-ca-certificates

    - name: Trust Certificate
      run: |
        certPath="$GITHUB_WORKSPACE/Certificates/aspnetapp-web-api.pfx"
        password="password"

        openssl pkcs12 -in "$certPath" -out temp.pem -nodes -password "pass:$password"
        sudo cp temp.pem /usr/local/share/ca-certificates/aspnetapp-web-api.crt
        sudo update-ca-certificates
        
    - name: Install NET 8
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0.x'

    - name: Restore Nuget Packages
      run: dotnet restore SecurityService.sln --source ${{ secrets.PUBLICFEEDURL }} --source ${{ secrets.PRIVATEFEED_URL }}

    - name: Build Code
      run: dotnet build SecurityService.sln --configuration Release

    - name: Run Unit Tests
      run: |
        echo "ASPNETCORE_ENVIRONMENT are > ${ASPNETCORE_ENVIRONMENT}"
        dotnet test "SecurityService.UnitTests\SecurityService.UnitTests.csproj"
    
    - name: Build Docker Images
      run: |
        docker build . --file SecurityService/Dockerfile --tag securityservice:latest

    - name: Run Integration Tests (Non UI)
      run: |
        dotnet test "SecurityService.IntegrationTests\SecurityService.IntegrationTests.csproj" --filter Category=PRTest

    - uses: actions/upload-artifact@v4.1.7
      if: ${{ failure() }}
      with:
        name: nonuilogs
        path: /home/txnproc/trace/


  buildfirefox:
    name: "Build and Unit Test Pull Requests - Firefox UI"
    env:
        ASPNETCORE_ENVIRONMENT: "Production"

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.3.4

    - name: Trust Root Certificate
      run: |
        certPath="$GITHUB_WORKSPACE/Certificates/aspnetapp-root-cert.pfx"
        password="password"

        openssl pkcs12 -in "$certPath" -out temp.pem -nodes -password "pass:$password"
        sudo cp temp.pem /usr/local/share/ca-certificates/aspnetapp-root-cert.crt
        sudo update-ca-certificates

    - name: Trust Certificate
      run: |
        certPath="$GITHUB_WORKSPACE/Certificates/aspnetapp-web-api.pfx"
        password="password"

        openssl pkcs12 -in "$certPath" -out temp.pem -nodes -password "pass:$password"
        sudo cp temp.pem /usr/local/share/ca-certificates/aspnetapp-web-api.crt
        sudo update-ca-certificates
        
    - name: Install NET 8
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0.x'

    - name: Restore Nuget Packages
      run: dotnet restore SecurityService.sln --source ${{ secrets.PUBLICFEEDURL }} --source ${{ secrets.PRIVATEFEED_URL }}

    - name: Build Code
      run: dotnet build SecurityService.sln --configuration Release    
    
    - name: Build Docker Images
      run: |
        docker build . --file SecurityService/Dockerfile --tag securityservice:latest
        docker build . --file SecurityServiceTestUI/Dockerfile --tag securityservicetestui:latest

    - name: Run Integration Tests (UI Firefox)
      env:
        Browser: Firefox
      run: |
        dotnet test "SecurityService.OpenIdConnect.IntegrationTests\SecurityService.OpenIdConnect.IntegrationTests.csproj" --filter Category=PRTest    

    - uses: actions/upload-artifact@v4.1.7
      if: ${{ failure() }}
      with:
        name: firefoxlogs
        path: /home/txnproc/trace/


  buildchromeui:
    name: "Build and Unit Test Pull Requests - Chrome UI"
    env:
        ASPNETCORE_ENVIRONMENT: "Production"

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.3.4

    - name: Trust Root Certificate
      run: |
        certPath="$GITHUB_WORKSPACE/Certificates/aspnetapp-root-cert.pfx"
        password="password"

        openssl pkcs12 -in "$certPath" -out temp.pem -nodes -password "pass:$password"
        sudo cp temp.pem /usr/local/share/ca-certificates/aspnetapp-root-cert.crt
        sudo update-ca-certificates

    - name: Trust Certificate
      run: |
        certPath="$GITHUB_WORKSPACE/Certificates/aspnetapp-web-api.pfx"
        password="password"

        openssl pkcs12 -in "$certPath" -out temp.pem -nodes -password "pass:$password"
        sudo cp temp.pem /usr/local/share/ca-certificates/aspnetapp-web-api.crt
        sudo update-ca-certificates

    - name: Install NET 8
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0.x'

    - name: Restore Nuget Packages
      run: dotnet restore SecurityService.sln --source ${{ secrets.PUBLICFEEDURL }} --source ${{ secrets.PRIVATEFEED_URL }}

    - name: Build Code
      run: dotnet build SecurityService.sln --configuration Release
   
    - name: Build Docker Images
      run: |
        docker build . --file SecurityService/Dockerfile --tag securityservice:latest
        docker build . --file SecurityServiceTestUI/Dockerfile --tag securityservicetestui:latest
  
    - name: Run Integration Tests (UI Chrome)
      env:
        Browser: Chrome
      run: |  
        dotnet test "SecurityService.OpenIdConnect.IntegrationTests\SecurityService.OpenIdConnect.IntegrationTests.csproj" --filter Category=PRTest

    - uses: actions/upload-artifact@v4.1.7
      if: ${{ failure() }}
      with:
        name: chromelogs
        path: /home/txnproc/trace/


  buildedgeui:
    name: "Build and Unit Test Pull Requests - Edge UI"
    env:
        ASPNETCORE_ENVIRONMENT: "Production"

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2.3.4

    - name: Trust Root Certificate
      run: |
        certPath="$GITHUB_WORKSPACE/Certificates/aspnetapp-root-cert.pfx"
        password="password"

        openssl pkcs12 -in "$certPath" -out temp.pem -nodes -password "pass:$password"
        sudo cp temp.pem /usr/local/share/ca-certificates/aspnetapp-root-cert.crt
        sudo update-ca-certificates

    - name: Trust Certificate
      run: |
        certPath="$GITHUB_WORKSPACE/Certificates/aspnetapp-web-api.pfx"
        password="password"

        openssl pkcs12 -in "$certPath" -out temp.pem -nodes -password "pass:$password"
        sudo cp temp.pem /usr/local/share/ca-certificates/aspnetapp-web-api.crt
        sudo update-ca-certificates

    - name: Install NET 8
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0.x'

    - name: Restore Nuget Packages
      run: dotnet restore SecurityService.sln --source ${{ secrets.PUBLICFEEDURL }} --source ${{ secrets.PRIVATEFEED_URL }}

    - name: Build Code
      run: dotnet build SecurityService.sln --configuration Release
    
    - name: Build Docker Images
      run: |
        docker build . --file SecurityService/Dockerfile --tag securityservice:latest 
        docker build . --file SecurityServiceTestUI/Dockerfile --tag securityservicetestui:latest

    - name: Run Integration Tests (UI Edge)
      env:
        Browser: Edge
        DriverPath: C:\\SeleniumWebDrivers\\EdgeDriver\\
        DriverExe: msedgedriver.exe
      run: |
        dotnet test "SecurityService.OpenIdConnect.IntegrationTests\SecurityService.OpenIdConnect.IntegrationTests.csproj" --filter Category=PRTest 

    - uses: actions/upload-artifact@v4.1.7
      if: ${{ failure() }}
      with:
        name: edgelogs
        path: /home/txnproc/trace/
