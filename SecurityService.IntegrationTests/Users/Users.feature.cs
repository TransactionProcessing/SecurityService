// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SecurityService.IntegrationTests.Users
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Xunit.TraitAttribute("Category", "base")]
    [Xunit.TraitAttribute("Category", "users")]
    [Xunit.TraitAttribute("Category", "roles")]
    public partial class UsersFeature : object, Xunit.IClassFixture<UsersFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = new string[] {
                "base",
                "users",
                "roles"};
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "Users.feature"
#line hidden
        
        public UsersFeature(UsersFeature.FixtureData fixtureData, SecurityService_IntegrationTests_XUnitAssemblyFixture assemblyFixture, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Users", "Users", null, ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public void TestInitialize()
        {
        }
        
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 4
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Role Name"});
            table29.AddRow(new string[] {
                        "TestRole1"});
            table29.AddRow(new string[] {
                        "TestRole2"});
            table29.AddRow(new string[] {
                        "TestRole3"});
#line 5
 testRunner.Given("I create the following roles", ((string)(null)), table29, "Given ");
#line hidden
        }
        
        void System.IDisposable.Dispose()
        {
            this.TestTearDown();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Get Users")]
        [Xunit.TraitAttribute("FeatureTitle", "Users")]
        [Xunit.TraitAttribute("Description", "Get Users")]
        [Xunit.TraitAttribute("Category", "PRTest")]
        public void GetUsers()
        {
            string[] tagsOfScenario = new string[] {
                    "PRTest"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get Users", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 12
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email Address",
                            "Phone Number",
                            "Given Name",
                            "Middle Name",
                            "Family Name",
                            "Claims",
                            "Roles"});
                table30.AddRow(new string[] {
                            "testuser1@testing.co.uk",
                            "123456789",
                            "Test",
                            "",
                            "User 1",
                            "",
                            "TestRole1"});
                table30.AddRow(new string[] {
                            "testuser2@testing.co.uk",
                            "123456789",
                            "Test",
                            "",
                            "User 2",
                            "",
                            "TestRole2"});
                table30.AddRow(new string[] {
                            "testuser3@testing.co.uk",
                            "123456789",
                            "Test",
                            "",
                            "User 3",
                            "",
                            "TestRole3"});
#line 13
 testRunner.Given("I create the following users", ((string)(null)), table30, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email Address",
                            "Phone Number",
                            "Given Name",
                            "Middle Name",
                            "Family Name",
                            "Claims",
                            "Roles"});
                table31.AddRow(new string[] {
                            "testuser1@testing.co.uk",
                            "123456789",
                            "Test",
                            "",
                            "User 1",
                            "email:testuser1@testing.co.uk, given_name:Test, family_name:User 1",
                            "TestRole1"});
#line 18
 testRunner.When("I get the user with user name \'testuser1@testing.co.uk\' the user details are retu" +
                        "rned as follows", ((string)(null)), table31, "When ");
#line hidden
                TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email Address",
                            "Phone Number",
                            "Given Name",
                            "Middle Name",
                            "Family Name",
                            "Claims",
                            "Roles"});
                table32.AddRow(new string[] {
                            "testuser2@testing.co.uk",
                            "123456789",
                            "Test",
                            "",
                            "User 2",
                            "email:testuser2@testing.co.uk, given_name:Test, family_name:User 2",
                            "TestRole2"});
#line 21
 testRunner.When("I get the user with user name \'testuser2@testing.co.uk\' the user details are retu" +
                        "rned as follows", ((string)(null)), table32, "When ");
#line hidden
                TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email Address",
                            "Phone Number",
                            "Given Name",
                            "Middle Name",
                            "Family Name",
                            "Claims",
                            "Roles"});
                table33.AddRow(new string[] {
                            "testuser3@testing.co.uk",
                            "123456789",
                            "Test",
                            "",
                            "User 3",
                            "email:testuser3@testing.co.uk, given_name:Test, family_name:User 3",
                            "TestRole3"});
#line 24
 testRunner.When("I get the user with user name \'testuser3@testing.co.uk\' the user details are retu" +
                        "rned as follows", ((string)(null)), table33, "When ");
#line hidden
                TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                            "Email Address",
                            "Phone Number",
                            "Given Name",
                            "Middle Name",
                            "Family Name",
                            "Claims",
                            "Roles"});
                table34.AddRow(new string[] {
                            "testuser1@testing.co.uk",
                            "123456789",
                            "Test",
                            "",
                            "User 1",
                            "email:testuser1@testing.co.uk, given_name:Test, family_name:User 1",
                            "TestRole1"});
                table34.AddRow(new string[] {
                            "testuser2@testing.co.uk",
                            "123456789",
                            "Test",
                            "",
                            "User 2",
                            "email:testuser2@testing.co.uk, given_name:Test, family_name:User 2",
                            "TestRole2"});
                table34.AddRow(new string[] {
                            "testuser3@testing.co.uk",
                            "123456789",
                            "Test",
                            "",
                            "User 3",
                            "email:testuser3@testing.co.uk, given_name:Test, family_name:User 3",
                            "TestRole3"});
#line 27
 testRunner.When("I get the users 3 users details are returned as follows", ((string)(null)), table34, "When ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                UsersFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                UsersFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
